{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","to","id","name","Message","message","Dialogs","dialogElements","dialogs","map","dialogItem","key","messageElements","messages","messageItem","isAuth","dialogsItems","value","newMessageBody","onChange","e","changeMessageBody","target","placeholder","cols","rows","onClick","sendMessage","compose","connect","state","dialogsPage","dispatch","messageBody","updateNewMessageBodyAC","sendMessageAC","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,aAAe,mC,oBCAjCD,EAAOC,QAAU,CAAC,SAAW,4B,gHCadC,EATI,SAACC,GAEhB,OACI,yBAAKC,UAAWC,IAAEC,QACd,kBAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,IAAKL,EAAMM,Q,kBCKzCC,EATC,SAACP,GAEb,OACI,yBAAKC,UAAWC,IAAEM,SAAUR,EAAMQ,U,OCiD3BC,EAnDC,SAACT,GAGb,IAAIU,EAAiBV,EAAMW,QAAQC,KAAI,SAACC,GAAiB,OAAO,kBAAC,EAAD,CAAYP,KAAMO,EAAWP,KAAMD,GAAIQ,EAAWR,GAAIS,IAAKD,EAAWR,QAClIU,EAAkBf,EAAMgB,SAASJ,KAAI,SAACK,GAAkB,OAAO,kBAAC,EAAD,CAAST,QAASS,EAAYT,QAASH,GAAIY,EAAYZ,GAAIS,IAAKG,EAAYZ,QAW/I,OAAIL,EAAMkB,OAON,yBAAKjB,UAAWC,IAAES,SAEd,yBAAKV,UAAWC,IAAEiB,cACbT,GAGL,yBAAKT,UAAWC,IAAEc,UACbD,EACD,6BACI,8BAEIK,MAAOpB,EAAMqB,eAAerB,EAAMqB,eAAe,GACjDC,SA5BU,SAACC,GAC3BvB,EAAMwB,kBAAkBD,EAAEE,OAAOL,QA4BjBM,YAAY,qBACZC,KAAK,KAAKC,KAAK,OAMvB,6BAAK,4BAAQC,QAhCD,WACpB7B,EAAM8B,gBA+BO,WAzBN,kBAAC,IAAD,CAAU1B,GAAI,Y,uBCWd2B,sBACXC,aA7BoB,SAACC,GACrB,MAAO,CACHtB,QAASsB,EAAMC,YAAYvB,QAC3BK,SAAUiB,EAAMC,YAAYlB,SAC5BK,eAAgBY,EAAMC,YAAYb,mBAKf,SAACc,GACxB,MAAO,CACHX,kBAAmB,SAACY,GAChBD,EAASE,YAAuBD,KAEpCN,YAAa,WACTK,EAASG,oBAejBC,IAFWR,CAGbtB","file":"static/js/3.2708948a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"DialogItem_dialogsItems__3a0eN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__11r0A\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './DialogItem.module.css';\n\n\nconst DialogItem = (props) => {\n\n    return (\n        <div className={s.dialog}>\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\n        </div>\n    );\n}\n\nexport default DialogItem;\n\n\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Message.module.css';\n\n\nconst Message = (props) => {\n\n    return (\n        <div className={s.message}>{props.message}</div>\n    );\n}\n\n\n\nexport default Message;","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Redirect } from 'react-router-dom';\n\nconst Dialogs = (props) => {\n\n   \n    let dialogElements = props.dialogs.map((dialogItem) => { return <DialogItem name={dialogItem.name} id={dialogItem.id} key={dialogItem.id} />  });\n    let messageElements = props.messages.map((messageItem) => { return <Message message={messageItem.message} id={messageItem.id} key={messageItem.id}/> });\n    \n    let changeMessageBodyHandle = (e)=>{\n        props.changeMessageBody(e.target.value);\n    };\n\n    let sendMessageHandle = ()=>{\n        props.sendMessage();\n        \n    };\n\n    if(!props.isAuth){\n\n        return <Redirect to={\"/login\"}/>;\n\n    }\n\n    return (\n        <div className={s.dialogs}>\n\n            <div className={s.dialogsItems}>\n                {dialogElements}\n\n            </div>\n            <div className={s.messages}>\n                {messageElements}\n                <div>\n                    <textarea \n                        \n                        value={props.newMessageBody?props.newMessageBody:\"\"}\n                        onChange={changeMessageBodyHandle}\n                        placeholder=\"Enter your message\" \n                        cols=\"30\" rows=\"5\" \n                        \n                    >\n\n                    </textarea>\n                </div>\n                <div><button onClick={sendMessageHandle}>Send</button></div>\n\n            </div>\n        </div>\n    );\n\n\n}\n\nexport default Dialogs;","import { sendMessageAC, updateNewMessageBodyAC } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages,\n        newMessageBody: state.dialogsPage.newMessageBody,\n       \n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeMessageBody: (messageBody) => {\n            dispatch(updateNewMessageBodyAC(messageBody));\n        },\n        sendMessage: () => {\n            dispatch(sendMessageAC());\n        },\n    };\n}\n\n\n\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\n\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\n\n// export default DialogsContainer;\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}